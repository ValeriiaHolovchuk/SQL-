Question

1. How can you produce a list of facilities that charge a fee to members, and that fee is less than 1/50th of the monthly maintenance cost? Return the facid, facility name, member cost, and monthly maintenance of the facilities in question.
SELECT  facid, 
	name, 
	membercost,  
	monthlymaintenance  
FROM cd.facilities
WHERE membercost < (monthlymaintenance/50) and membercost > 0;

2. How can you produce a list of all facilities with the word 'Tennis' in their name?
SELECT *
FROM cd.facilities
WHERE name ILIKE '%Tennis%';

3. How can you retrieve the details of facilities with ID 1 and 5? Try to do it without using the OR operator.
SELECT *
FROM cd.facilities
WHERE facid IN (1,5);

4. How can you produce a list of facilities, with each labelled as 'cheap' or 'expensive' depending on if their monthly maintenance cost is more than $100? Return the name and monthly maintenance of the facilities in question.
SELECT name,
		CASE 
			WHEN monthlymaintenance < 100 THEN 'cheap'
			WHEN monthlymaintenance > 100 THEN 'expensive'
		END AS cost
FROM cd.facilities;

5. How can you produce a list of members who joined after the start of September 2012? Return the memid, surname, firstname, and joindate of the members in question.
SELECT  memid, 
	surname, 
	firstname, 
	joindate
FROM cd.members
WHERE joindate >= DATE '2012-09-01'

6. How can you produce a list of the start times for bookings by members named 'David Farrell'?

SELECT starttime
FROM cd.bookings
WHERE memid = 
		(SELECT memid
		 FROM cd.members
		 WHERE surname = 'Farrell' AND firstname = 'David');

7. How can you produce a list of the start times for bookings for tennis courts, for the date '2012-09-21'? Return a list of start time and facility name pairings, ordered by the time.
SELECT cb.starttime AS start, 
	   cf.name
FROM cd.bookings cb
JOIN cd.facilities cf ON cb.facid = cf.facid
WHERE cf.name LIKE 'Tennis Court%' AND 
	  cb.starttime >= DATE '2012-09-21' AND 
	  cb.starttime < DATE '2012-09-22'
ORDER BY starttime;

8.How can you output a list of all members who have recommended another member? Ensure that there are no duplicates in the list, and that results are ordered by (surname, firstname).
SELECT DISTINCT rec.firstname AS firstname, 
		rec.surname AS surname 
FROM cd.members memb
JOIN cd.members rec ON rec.memid = memb.recommendedby
ORDER BY surname, firstname;


